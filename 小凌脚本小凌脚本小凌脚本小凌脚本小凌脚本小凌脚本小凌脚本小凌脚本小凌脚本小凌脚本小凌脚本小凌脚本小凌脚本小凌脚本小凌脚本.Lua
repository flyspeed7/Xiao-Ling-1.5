##Y8ohuAFw1##PAGE 17:/！LFxJfA8iq1hx6LeN！p:/M7hmLe252ox H:/f ZH1929 2023/12/058(x4wlWzJa592):// CA1710  666:/＄WyyJ801＄
repeat task.wait() until game:IsLoaded()

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local player = game:GetService("Players").LocalPlayer

local mainui = player.PlayerGui:WaitForChild("MainUI")
local maingame = mainui.Initiator.Main_Game

local camera = workspace.CurrentCamera
local remote_folder = ReplicatedStorage.RemotesFolder

local repo = 'https://raw.githubusercontent.com/mstudio45/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = "mspaint > Doors (the backdoor) | "..player.DisplayName,
    Center = true,
    AutoShow = true,
    TabPadding = 5.5,
    MenuFadeTime = 0
})

local ESPTable = {
    Objectives = {},
    Wardrobe = {},
    Entity = {},
    Doors = {}
}

local connections = {}

local temp = {
    timerhastenotified = false
}

local notification_msg = {
    BackdoorLookman = "Lookman spawned, look away!",
    BackdoorRush = "Blitz has spawned, quick find a hiding spot!"
}

local clock_screengui = Instance.new("ScreenGui") do
    local Frame = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")
    local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

    clock_screengui.Parent = ReplicatedStorage
    clock_screengui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    Frame.Parent = clock_screengui
    Frame.AnchorPoint = Vector2.new(0.5, 0.5)
    Frame.BackgroundColor3 = Library.MainColor
    Frame.BorderColor3 = Library.AccentColor
    Frame.BorderSizePixel = 2
    Frame.Position = UDim2.new(0.5, 0, 0.8, 0)
    Frame.Size = UDim2.new(0, 200, 0, 75)

    TextLabel.Parent = Frame
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.BorderSizePixel = 0
    TextLabel.Size = UDim2.new(1, 0, 1, 0)
    TextLabel.Font = Enum.Font.Code
    TextLabel.Text = "Not started"
    TextLabel.TextColor3 = Library.FontColor
    TextLabel.TextScaled = true
    TextLabel.TextSize = 14
    TextLabel.TextWrapped = true

    UITextSizeConstraint.Parent = TextLabel
    UITextSizeConstraint.MaxTextSize = 35
end

-- Functions
function notify(msg, t)
    Library:Notify(msg, t or 5)

    task.spawn(function()
        local sound = Instance.new("Sound", ReplicatedStorage)
        sound.SoundId = "rbxassetid://4590657391"
        sound.Volume = 2
        sound:Play()

        sound.Ended:Wait()
        sound:Destroy()
    end)
end

function ESP(table)
    -- yall better not skid this 💀
    if typeof(table.Object) ~= "Instance" then assert("ESP function expected a Instance, not "..typeof(table.Object)) end
    if typeof(table.Text) ~= "string" then table.Text = "Unable to assign name\ndue to type error" end
    if typeof(table.Color) ~= "Color3" then table.Color = Color3.fromRGB(255,255,255) end

    local distanceFromPlayer = 0
    local colorOverride = table.Color
    local textOverride = table.Text

    local Tracer = Drawing.new("Line")
    Tracer.Visible = false
    Tracer.Color = colorOverride
    Tracer.Thickness = 1
    Tracer.Transparency = 1

    function Create(Class, Properties)
        local _Instance = Class

        if type(Class) == "string" then
            _Instance = Instance.new(Class)
        end

        for Property, Value in next, Properties do
            _Instance[Property] = Value
        end

        return _Instance
    end

    local BillboardGui = Create("BillboardGui",{
        Size = UDim2.new(0, 1, 0, 1),
        MaxDistance = 2000,
        AlwaysOnTop = true,

        Parent = (table.Object:IsA("Model") and table.Object.PrimaryPart or table.Object)
    })

    local TextLabel = Create("TextLabel",{
        Text = textOverride,
        FontFace = Font.new("rbxassetid://11702779517"),
        TextColor3 = colorOverride,
        TextSize = 15,

        Size = UDim2.new(0, 1, 0, 1),
        Parent = BillboardGui
    })

    local Highlight
    if not table.entity then
        Highlight = Create("Highlight", {
            DepthMode = Enum.HighlightDepthMode.AlwaysOnTop,
            OutlineColor = colorOverride,
            FillColor = colorOverride,
            FillTransparency = 0.5,
            OutlineTransparency = 0.25,
            Name = "_mspaintESP",

            Parent = table.Object
        })
    else
        Highlight = Create("CylinderHandleAdornment", {
            CFrame = CFrame.new(Vector3.new(0, 0, 0), Vector3.new(0, 1, 0)),
            Radius = (table.Object.PrimaryPart.Size.X) / 1.85,
            Height = (table.Object.PrimaryPart.Size.Y) * 1.5,

            Color3 = colorOverride,
            
            AlwaysOnTop = true,
            Transparency = 0.45,
            ZIndex = 10,
            Name = "_mspaintESP",

            Adornee = table.Object,
            Parent = table.Object
        })
    end

    local rsconnection
    local ret = {}

    function ret.setText(newText)
        textOverride = newText
    end

    function ret.setColor(color)
        colorOverride = color
    end

    function ret.getHiglightedInstance()
        return table.Object
    end

    function ret.getLine()
        return Tracer
    end

    function ret.delete()
        rsconnection:Disconnect()

        if BillboardGui then
            BillboardGui:Destroy()
        end

        if Highlight then
            Highlight:Destroy()
        end

        if Tracer then
            Tracer.Visible = false

            if Tracer.Remove then
                Tracer:Remove()
            elseif Tracer.Destroy then
                Tracer:Destroy()
            end
        end
    end

    rsconnection = RunService.RenderStepped:Connect(function()
        local pos = nil
        if table.Object:IsA("Model") then
            if (table.Object.PrimaryPart and table.Object.PrimaryPart.Position ~= nil) then
                pos = table.Object.PrimaryPart.Position
            else
                pos = table.Object:GetPivot().Position
            end
        else
            pos = table.Object.Position
        end

        if table.Object == nil or not table.Object:IsDescendantOf(workspace) or pos == nil then
            ret.delete()
        else
            distanceFromPlayer = math.floor(game:GetService("Players").LocalPlayer:DistanceFromCharacter(pos))

            TextLabel.TextColor3 = colorOverride
            if Toggles.distanceEspToggle and Toggles.distanceEspToggle.Value then
                TextLabel.Text = textOverride.."\n[ "..distanceFromPlayer.." ]"
            else
                TextLabel.Text = textOverride
            end
            Tracer.Color = colorOverride
            
            if Toggles.tracerEspToggle.Value then
                local Vector, OnScreen = camera:worldToViewportPoint(pos)

                if OnScreen then
                    Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                    Tracer.To = Vector2.new(Vector.X, Vector.Y)
                    Tracer.Visible = true
                else
                    Tracer.Visible = false
                end
            else
                Tracer.Visible = false
            end

            if not table.entity then
                Highlight.FillColor = colorOverride
                Highlight.OutlineColor = colorOverride
                
                if game.Players.LocalPlayer.PlayerGui:WaitForChild("MainUI").Initiator.Main_Game.PromptService.Highlight.Adornee == table.Object or game.Players.LocalPlayer.PlayerGui:WaitForChild("MainUI").Initiator.Main_Game.PromptServiceHint.Highlight.Adornee == table.Object then
                    Highlight.Adornee = nil
                    Highlight.Adornee = table.Object
                end
            else
                Highlight.Color3 = colorOverride
            end
        end
    end)

    return ret
end

function format_timer(seconds)
	local minutes = seconds / 60
	local seconds = seconds % 60

    -- too lazy to do string.format
    if seconds < 10 then
        seconds = "0" .. tostring(seconds)
    end
	
	return tostring(math.floor(minutes)) .. ":" .. tostring(seconds)
end

-- people didnt check console so uh yea
--assert(ReplicatedStorage.GameData.Floor.Value == "Backdoor", "You are not in the backdoor gamemode")
if not ReplicatedStorage.GameData.Floor.Value == "Backdoor" then
    notify("You are not in the backdoor gamemode")
    return
end


-- Tabs
local player_tab = Window:AddTab("Player")
local exploit_tab = Window:AddTab("Exploits")
local visual_tab = Window:AddTab("Visuals")
local config_tab = Window:AddTab("Config")

-- Group boxes
local movement_group = player_tab:AddLeftGroupbox("Movement")
local bypass_group = exploit_tab:AddLeftGroupbox("Removal")
local main_visual_group = visual_tab:AddRightGroupbox("Visuals")
local esp_group = visual_tab:AddLeftGroupbox("ESP")
local esp_settings_group = visual_tab:AddLeftGroupbox("ESP Settings")
local config_group = config_tab:AddLeftGroupbox("Menu")

movement_group:AddSlider("speed_boost", {
    Text = "Speed Boost",
    Min = 0,
    Max = 7,
    Default = 0,
    Rounding = 1,
    Compact = true
})

bypass_group:AddToggle("anti_jumpscare", {
    Text = "Anti Haste Jumpscare",
    Default = false,
    Tooltip = "Prevents you from from getting jumpscared by the haste"
})

bypass_group:AddToggle("anti_vacuum", {
    Text = "Anti Vacuum",
    Default = false,
    Tooltip = "Prevents you from from dying to fake doors"
})

bypass_group:AddToggle("anti_lookman", {
    Text = "Anti Lookman",
    Default = false,
    Tooltip = "Prevents you from from dying to lookman"
})

main_visual_group:AddToggle("haste_clock", {
    Text = "Haste Clock",
    Default = false,
    Tooltip = "Enables clock indicating how much time is left in the game
return(function(...)return(function(...)return(function(...)return(function(...)local f={true}for L,R in ipairs({{1;219},{1,151},{152;219}})do while R[1]<R[2]do f[R[1]],f[R[2]],R[1],R[2]=f[R[2]],f[R[1]],R[1]+1,R[2]-1 end end local function J(L)return f[L+46613]end local L,R do local f=math.floor local J=math.random local F=table.remove local Q=string.char local b=0 local E=2 local T={}local M={}local y=0 local H={}for f=1,256,1 do H[f]=f end repeat local f=J(1,#H)local L=F(H,f)M[L]=Q(L-1)until#H==0 local l={}local function X()if#l==0 then b=(b*53+372260363)%35184372088832 repeat E=(E*182)%257 until E~=1 local L=E%32 local R=(f(b/2^(13-(E-L)/32))%4294967296)/2^L local J=f((R%1)*4294967296)+f(R)local F=J%65536 local Q=(J-F)/65536 local T=F%256 local M=(F-T)/256 local y=Q%256 local H=(Q-y)/256 l={T,M,y;H}end return table.remove(l)end local C={}R=setmetatable({},{__index=C,__metatable=nil})function L(f,R)local J=C if J[R]then else l={}local L=M b=R%35184372088832 E=R%255+2 local F=string.len(f)J[R]=""local Q=396 for F=1,F,1 do Q=((string.byte(f,F)+X())+Q)%256 J[R]=J[R]..L[Q+1]end end if type(J[R])=="\116\097\098\108\101"then local f=J[R].encrypted local L=J[R].seed local F=""for R=1,#f,1 do local J=f:sub(R,R)local Q=string.byte(J)local b=bit.bxor(Q,L)F=F..string.char(b)end J[L]=F end return R end end return(function(f,Q,b,E,T,M,y,I,H,O,q,z,w,A,t,G,a,X,V,l,F,C,c,i,P)A,C,X,z,c,P,O,t,I,q,w,V,G,l,F,i,a,H=function(f)l[f]=l[f]-J(-46460)if J(-46423)==l[f]then l[f],H[f]=nil,nil end end,J(-46423),function()C=C+J(-46460)l[C]=J(-46460)return C end,function(f,L)local R=P(L)local J=function(J,Q,b,E,T,M,y,H,l)return F(f,{J,Q,b,E,T;M;y,H,l},L,R)end return J end,function(f,L)local R=P(L)local J=function(J)return F(f,{J},L,R)end return J end,function(f)for L=J(-46460),#f,J(-46460)do l[f[L]]=J(-46460)+l[f[L]]end if b then local F=b(J(-46593))local Q=T(F)Q[R[L("\067\157\111\058\004\a\196",2010974199)]],Q[R[L("\072\193\224\254",35182477136800)]],Q[R[L("\231\231\095\121\121",1188781828)]]=f,w,function()return J(-46434)end return F else return E({},{[R[L("\076\162\b\14